/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-04-21 02:28:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ZombieChat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1459747375077L));
    _jspx_dependants.put("jar:file:/C:/dev/jado_공은아/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/projectSample/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("    html, body { height:100%; overflow:hidden }\r\n");
      out.write("    #result {height:90%; width: 99%; overflow:auto;}\r\n");
      out.write("    #scrap{height:10%;width: 90%; text-align:center; font-size:30px; color:white; text-shadow: 2px 2px gray; font-weight: bold; cursor:pointer;\r\n");
      out.write("     background: \t#2196F3; }\r\n");
      out.write("    #scrap:active {\r\n");
      out.write("    background: #3366cc;}\r\n");
      out.write("    div .btn{\r\n");
      out.write("    float: left;\r\n");
      out.write("    }\r\n");
      out.write("    #btn{\r\n");
      out.write("    font-size:30pt;\r\n");
      out.write("    height:10%;\r\n");
      out.write("    background-color:white;\r\n");
      out.write("    line-height: 46px;\r\n");
      out.write("    text-align:center;\r\n");
      out.write("    \twidth: 10%\r\n");
      out.write("    }\r\n");
      out.write("    .wrap{\r\n");
      out.write("    \tborder: 0.5px solid gray;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<title>WebSocket Client</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/stickies/stickies.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/default.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/jquery-2.2.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var nickname= \"");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("var ws = null;\t\r\n");
      out.write("var scrapWs = null;\r\n");
      out.write("window.onload=function connect() {\r\n");
      out.write("\tvar url = window.location.href;\r\n");
      out.write("\tvar arr = url.split(\"=\")\r\n");
      out.write("  // 아래의 적색 경로는 서버측의 ServerEndPoint 를 사용해야 하고 ? 표시 오른쪽에는 파라미터가 온다\r\n");
      out.write(" var target = \"ws://203.233.196.76:8666/app/echo?usr=\"+arr[1]+\"zombie\"; //서버에서 파라미터를 \r\n");
      out.write(" if ('WebSocket' in window) {\r\n");
      out.write("     ws = new WebSocket(target);\r\n");
      out.write(" } else if ('MozWebSocket' in window) {\r\n");
      out.write("     ws = new MozWebSocket(target);\r\n");
      out.write(" } else {\r\n");
      out.write("     return;\r\n");
      out.write(" }\r\n");
      out.write(" ws.onopen = function () {\r\n");
      out.write(" };\r\n");
      out.write(" ws.onmessage = function (event) {\r\n");
      out.write("\t var data = event.data;\r\n");
      out.write("\tdata = data.substring(12,data.length-2)\r\n");
      out.write("\tdata=data.replace(/\\\\n/g,'')\r\n");
      out.write("\tdata='\\n'+data\r\n");
      out.write("\t$(\"#result\").val($(\"#result\").val()+data)\r\n");
      out.write("\t\r\n");
      out.write(" };\r\n");
      out.write(" ws.onclose = function () {\r\n");
      out.write(" \r\n");
      out.write(" };\r\n");
      out.write("}\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$('body').on('click','.getScrap',function(){\r\n");
      out.write("\t\tvar title = $(this).text();\r\n");
      out.write("\t\tvar userNum = $('#userNum').val();\r\n");
      out.write("\t\tvar mydata={\r\n");
      out.write("\t\t\t\t\"userNum\" : userNum\r\n");
      out.write("\t\t\t\t,\"title\":title\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\tmydata = JSON.stringify(mydata);\r\n");
      out.write("\t\t\tmydata=$.ajax({\r\n");
      out.write("\t\t\t\tmethod:\"post\"\r\n");
      out.write("\t\t\t\t,url:\"getScrap\"\r\n");
      out.write("\t\t\t\t,data:mydata\r\n");
      out.write("\t\t\t\t,dataType:\"json\"\r\n");
      out.write("\t\t\t\t,contentType:\"application/json;charset=utf-8\"\r\n");
      out.write("\t\t\t\t,success:function(response){\r\n");
      out.write("\t\t\t\t\tvar content = response.content\r\n");
      out.write("\t\t\t\t\t$('#result').val(content)\r\n");
      out.write("\t\t\t\t},error:function(response){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\t\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\t$('#scrap').on('click',function(){\r\n");
      out.write("\t\tvar title = prompt('제목입력');\r\n");
      out.write("\t\tvar data = $('#result').val();\r\n");
      out.write("\t\tvar mydata={\r\n");
      out.write("\t\t\t\t\"data\" : data\r\n");
      out.write("\t\t\t\t,\"title\":title\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\tmydata = JSON.stringify(mydata);\r\n");
      out.write("\t\t\tmydata=$.ajax({\r\n");
      out.write("\t\t\t\tmethod:\"post\"\r\n");
      out.write("\t\t\t\t,url:\"scrap\"\r\n");
      out.write("\t\t\t\t,data:mydata\r\n");
      out.write("\t\t\t\t,dataType:\"json\"\r\n");
      out.write("\t\t\t\t,contentType:\"application/json;charset=utf-8\"\r\n");
      out.write("\t\t\t\t,success:function(response){\r\n");
      out.write("\t\t\t\t\tvar json =response;\r\n");
      out.write("\t\t\t\t},error:function(response){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\t\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\r\n");
      out.write("\t})\r\n");
      out.write("\t$('#btn').on('click',function(){\r\n");
      out.write("\t\tvar dis = $('#scrapList').css('display');\r\n");
      out.write("\t\tvar userNum = $('#userNum').val();\r\n");
      out.write("\t\tif(dis!='none'){\r\n");
      out.write("\t\t\t$(\"#Sclist\").empty();\r\n");
      out.write("\t\t\tvar mydata={\r\n");
      out.write("\t\t\t\t\t\"userNum\":userNum\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tmydata = JSON.stringify(mydata);\r\n");
      out.write("\t\t\t\tmydata=$.ajax({\r\n");
      out.write("\t\t\t\t\tmethod:\"post\"\r\n");
      out.write("\t\t\t\t\t,url:\"readScrapList\"\r\n");
      out.write("\t\t\t\t\t,data:mydata\r\n");
      out.write("\t\t\t\t\t,dataType:\"json\"\r\n");
      out.write("\t\t\t\t\t,contentType:\"application/json;charset=utf-8\"\r\n");
      out.write("\t\t\t\t\t,success:function(response){\r\n");
      out.write("\t\t\t\t\t\tvar json =response\r\n");
      out.write("\t\t\t\t\t\tvar count;\r\n");
      out.write("\t\t\t\t\t\tfor(count=0;count<json.length;count++){\r\n");
      out.write("\t\t\t\t\t\t\t$('ul').append(\"<li><a class='getScrap'>\"+json[count].title+'</a></li>')\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},error:function(response){\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\t\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#scrapList').css('display','none');\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('#scrapList').css('display','block');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<input type=\"hidden\" id=\"userNum\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<div class=\"wrap\" style=\"\">\r\n");
      out.write("<div id=\"btn\" class=\"btn\">+</div> <div class=\"btn\" id=\"scrap\"> SCRAP IT</div>  \r\n");
      out.write("\t<div id=\"scrapList\" style=\" display:none; position: absolute; border: 1px; margin-top: 47px; background-color: white; z-index: 50\">\r\n");
      out.write("\t<ul id=\"Sclist\">\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<textarea id=\"result\" ></textarea>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/views/ZombieChat.jsp(35,15) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userNum}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }
}
